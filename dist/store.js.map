{"version":3,"sources":["../src/store.js"],"names":["configureStore","reducers","sagas","sagaMiddleware","middleware","push","enhancers","store","run","close","dispatch"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;AAEO,IAAMA,0CAAiB,SAAjBA,cAAiB,CAACC,QAAD,EAAWC,KAAX,EAAqB;AACjD,MAAMC,iBAAiB,0BAAvB;;AAEA,MAAMC,aAAa,CAACD,cAAD,CAAnB;AACAC,aAAWC,IAAX,CAAgBF,cAAhB;;AAEA,MAAMG,YAAY,oBAChB,wCAAmBF,UAAnB,CADgB,CAAlB;;AAKA,MAAMG,QAAQ,wBACZN,QADY,EAEZK,SAFY,CAAd;;AAKAH,iBAAeK,GAAf,CAAmBN,KAAnB;;AAEAK,QAAME,KAAN,GAAc;AAAA,WAAMF,MAAMG,QAAN,gBAAN;AAAA,GAAd;;AAEA,SAAOH,KAAP;AACD,CArBM;AAHP","file":"store.js","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\n// import { autoRehydrate } from 'redux-persist';\nimport createSagaMiddleware, { END } from 'redux-saga';\n\nexport const configureStore = (reducers, sagas) => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const middleware = [sagaMiddleware];\n  middleware.push(sagaMiddleware);\n\n  const enhancers = compose(\n    applyMiddleware(...middleware),\n    // autoRehydrate()\n  );\n\n  const store = createStore(\n    reducers,\n    enhancers\n  );\n\n  sagaMiddleware.run(sagas);\n\n  store.close = () => store.dispatch(END)\n\n  return store;\n}\n"]}